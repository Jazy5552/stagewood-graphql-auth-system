type Query {
  info: String!,
  feed(filter: String, skip: Int, take: Int, orderBy: LinkOrderByInput): Feed!,
  link(id: ID!): Link,
  "Self user information, user authentication required"
  user: User,
}

type Mutation {
  "User authentication required"
  post(url: String!, description: String!): Link!,
  register(email: String!, password: String!, username: String!, name: String!): AuthPayLoad,
  login(email: String!, password: String!): AuthPayLoad,
}

type Feed {
  links: [Link!]!,
  count: Int!,
}

type Link {
  id: ID!,
  description: String!,
  url: String!,
  postedBy: User,
  createdAt: String!,
}

type AuthPayLoad {
  token: String,
  user: User,
}

type User {
  id: ID!,
  email: String!,
  username: String!,
  name: String!,
  links: [Link!]!,
}

input LinkOrderByInput {
  description: Sort,
  url: Sort,
  createdAt: Sort,
}

enum Sort {
  asc,
  desc,
}
